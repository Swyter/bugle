0.0.20060306
------------
* Fix compilation problem with newer versions of flex
* Fix some Debian testing build program (thanks to James Lyon for a patch)

0.0.20060224
------------
* Fix numerous C89 warnings. Unfortunately GLee is not valid C89 code.
* Fix dumping of return from glGetProgramStringARB
* Change the way pages were refreshed to be cleaner and to work on GTK+ 2.8.
* Fix bogus warnings about glVertexAttrib*ARB being called from outside
  glBegin/glEnd with indices other than 0
* Pass textures to gldb-gui in GL_FLOAT, in preparation for eventual
  tone mapping
* Heavy modification of the filter load/unload/activate/deactivate code.
  Filtersets are now loaded on startup and never unloaded, but can
  be activated or deactivated on the fly by the debugger or by keyboard
  shortcut.
* Keyboard interception
* Make video capture work with pre-release versions of libavformat
* Make wireframe and frontbuffer work with activation and deactivation
* Integrate gl2ps to replace epswire
* Change license to GPLv2 only

0.0.20060101
------------
* gldb-gui improvements
  - Fix programs hanging around and spinning after gldb-gui quits
  - Convert values to UTF8 (TODO: names as well)
  * Texture viewer improvements
    - copy button (can paste into GIMP)
    - display of 1D, 2D, RECT and cubemap textures
    - control over mag and min filters
    - fit to window or choice of zoom levels
    - work around for ATI driver bug
* Rewrite of the GLSL state tracking
* Add bugle_hash_count and bugle_hashptr_count to simplify hash table class
* Allow aux contexts to be created in absence of GLX 1.3
* Make GL_EXT_texture_rectangle support work even if neither
  GL_NV_texture_rectangle nor GL_ARB_texture_rectangle is advertised
* Use glXGetProcAddress to get function pointers rather than libtool
  (ATI driver works much better now)
* test suite:
  - Use GLee rather than relying on GL_GLEXT_PROTOTYPES
  - Fix some failures in caused by driver weirdness not bugle bugs
  - Rewrite the log comparison tool to give more useful feedback
  - Added a test that just creates textures, to test the texture viewer

0.0.20051112
------------
* Fix find_header.pl to look in . and in $srcdir
* Fix Perl warning in glexts.perl
* Have genfunctions.perl spit out #warnings in the C++ code when
  the function lists mismatch, rather than breaking everything
* Fix a check for the incorrect symbol in glstate.c (broke with
  older glext.h)
* Add support for several extensions in the state manager:
  - GL_ATI_draw_buffers
  - GL_ARB_vertex_program
  - GL_ARB_fragment_program
  - GL_EXT_texture_filter_anisotropic
  - GL_EXT_depth_bounds_test
  - GL_NV_texture_rectangle/GL_EXT_texture_rectangle/GL_ARB_texture_rectangle
  - GL_NV_light_max_exponent
  - GL_NV_depth_clamp
  - GL_NV_multisample_filter_hint
  - GL_NV_texture_expand_normal
  - GL_IBM_rasterpos_clip
  - GL_EXT_framebuffer_object (incomplete)
* Add support for textures beyond GL_MAX_TEXTURE_UNITS
  i.e. GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS and GL_MAX_TEXTURE_COORDS
* Add GL_COMPRESSED_TEXTURE_FORMATS to the state
* Extend the extension generator to handle extension groups
* Add some extra checks to the 'checks' filterset
* Add documentation on extension handling
* gldb no longer hangs when asked for non-existant substate
* gldb gives all lines of backtrace, not just first line
* split gldb-common.c out from gldb.c to facilitate gldb-gui
* early work on gldb-gui
* fix gldb segfault on program exit

0.0.20050221
------------
* Added checks filterset
* Vastly improved support for systems short on extensions
* Changed the way tests are done (using regexes) to make them more
  robust and less likely to fail when moving to a different system.
* Redesign of the filter management code to reduce overhead.
* Redesign of the filter-set variable code to use tables rather than
  banks of if's.
* Rewrite some of the documentation.
* Rewrite of the code generator; now generates GROUP_ tokens and
  generally separates groups from functions.
* Rewrite of the state manager (incomplete).
* Support for GLSL.
* Rewritten object tracker, using radix trees.
* Linked lists and hash tables are now told at creation time whether
  they own their memory.
* Make opaque bugle_object and bugle_object_view typedefs.
* Redo the internals of object layer storage to avoid possible
  alignment problems.
* Added a threading abstraction layer.
* Removed canon.c/canon.h, since they are no longer needed.
* State now assembled by gldb, allowing tab completion for state
* Switch to ltdl for module and library loading

0.0.20041123
------------
* Added stats and showstats filtersets
* Speeded up the case where functions are not intercepted at all

0.0.20041108
------------
* Fix crash in video capture (not sure how it ever worked)
* Fix dumping bug (wrong field was being type overridden)
* (gldb) Make a blank line rerun previous command
* Fix various compiler warnings
* Added --without-lavc configure option
* Add the showextensions filter-set.

0.0.20041025
------------
* Redo libreadline detection to fall back gracefully if the library
  doesn't link properly, and to explicitly link against libncurses if
  present (needed for Slackware with readline 5, apparently)
* Better support for older versions of glext.h, as well as better support
  for possible future versions where extensions get promoted to core.
* Better dumping of GLSLang functions (GetUniformARB needs works still).
* Fix interception of glXGetProcAddressARB (was not loading the filter)

0.0.20041011
------------
* (gldb) Allow options to be passed to the program
* (gldb) screenshot command
* (gldb) Enable and disable filters on the fly
* (capture) By default, skip or duplicate frames for videos
* Fold old types.c and types.h into utils.c and utils.h
* Introduce names.c and names.h, to hold just the names of the functions
* Rewrite the token capture system, which now captures extension info
* New system to capture which functions belong to which extensions
* Support for per-context, per-filter state
* Move tracker library into the core source
* Move logging into the core source, and split the tracing functionality
  out into a 'trace' module
* Make gldb and libbugleutils independent of GL and X
* Hex output of GLXDrawable (looks nicer, plus removes spurious regression
  errors)

0.0.20040903
------------
* Improvements to video capture: get libavcodec to do the mirroring,
  and use GL_EXT_pixel_buffer_object for possibly faster capture.

0.0.20040719
------------
* Added ability to stop running program with Ctrl-C.
* Improved thread safety.
* Rewrite of the state code
* Added basic state dump support to gldb
* Dump overrides are now boolean expressions, not functions
* Improved test suite, with some log regression tests
* Support for aux contexts
* Added movie mode to screenshot filterset

0.0.20040614
------------
* Added the gldb debugger
* Added some sanity checks to make sure that internal code does not generate
  GL errors.
* Remove the "trap" option of the "error" module.
* Autoload the invoke filterset, and load the debugger filterset if the
  environment variables are set.
* Wrote manual pages.

0.0.20040609
------------
* Made lexer.ll more robust to headers containing function bodies and
  inline assembler.

0.0.20040608
------------
* First public release
