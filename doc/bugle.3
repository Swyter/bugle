.TH BUGLE 3 "February 2005" BUGLE "User Manual"
.SH NAME
bugle \- An OpenGL debugging library
.SH SYNOPSIS
.BI BUGLE_CHAIN\fR= "chain " "LD_PRELOAD\fR=\fBlibbugle.so " program
.RI "[" arguments "...]"
.SH DESCRIPTION
.B bugle
is a library that intercepts calls to OpenGL functions, in much the
same way that many memory debuggers do. Calls are run through a number
of user-specified
.IR filter-sets ,
including one that invokes the original call. The available
filter-sets are listed in 
.B FILTER-SETS
below.

In addition, the utility
.BR gldb (1)
can be used to interface with the library, and do useful things like
stopping on OpenGL errors. For common usage this may be the most
convenient way to use
.BR bugle .

The
.B BUGLE_CHAIN
environment variable specifies a
.IR "filter-set chain" ,
which is simply a collection of filter-sets. Chains are defined in the
configuration file (see
.BR CONFIGURATION ).
.SH "FILTER-SETS"
Several of the filter-sets take optional arguments. These are specified
in the configuration file, described in
.B CONFIGURATION
below.
.TP
.B log
Provides a logging facility for other modules, without doing any
logging itself.
The
.B filename
option specifies the filename to which to write the log (the file is
overwritten). If not specified, the log is to standard error. The
.B flush
option may be set to
.B yes
to flush the log after every OpenGL call.
.TP
.B trace
Writes information about each OpenGL call (and a few GLX calls) to the
log. If the
.B error
filter-set is also loaded, OpenGL errors will also be written to the
log (note that several other filter-sets implicitly load the
.B error
filter-set).
.TP
.B error
Checks for OpenGL errors after every OpenGL call that does not occur
between
.B glBegin
and
.BR glEnd ,
and wraps
.B glGetError
so that this checking is transparent to the application. This
filter-set does little on its own, but provides this service to other
filter-sets such as the
.B trace
filter-set.
.TP
.B showerror
Writes OpenGL errors to standard error.
.TP
.B showextensions
On exit, outputs information on what version of OpenGL and what
extensions are used by the program (they may not be required, if the
program adapts to what is available). This code is still in
development, and may report surprising results (e.g.
.B GL_EXT_vertex_arrays
may be reported even though it is incorporated into OpenGL 1.1).
It will always report at least OpenGL 1.1 and GLX 1.2 as required,
although they may not be.
.TP
.B wireframe
Forces the application to render in wireframe mode (i.e. with
.B glPolygonMode
set to
.BR GL_LINE ),
and attempts to disable texturing.
It also forces a colour buffer clear after every frame, since some apps
will look completely wrong otherwise.
.TP
.B frontbuffer
Sets
.B glDrawBuffer
to
.BR GL_FRONT ,
and does a few other things to try to make drawing to the front buffer
work. This is particularly useful in conjunction wth
.B gldb
with breakpoints set on drawing functions, to watch a frame being drawn
piece by piece.
.TP
.B screenshot
Writes screenshots in
.BR ppm (5)
format after every frame. The screenshots are written to
.BI frame NNNN .ppm\fR,
where
.I NNNN
is the frame number. It has an optional variable
.BR video .
If this variable is set, the value must be a filename. The frames are
encoded to a video with this filename. The variable
.B codec
controls the video codec. This video mode requires the
.B ffmpeg
library. See the example configuration file for documentation of the
other options.
.TP
.B unwindstack
This filter-set is a bit of a hack, and may not work reliably on all
systems. It addresses the problem of a crash inside an OpenGL driver
that contains no stack frame information, making it impossible to
determine the source of the error. It attempts to make a partial
recovery, then regenerates the crash but from a point where a stack
trace will work. If running your program inside
.BR gdb,
continue past the first segmentation fault and ask for a stack trace
after the second.
.TP
.BR stats ", " showstats
The
.B stats
filterset collects various statistics (frames per second, and optionally
fragments and triangles, at the time of writing). If the
.B log
filterset is also loaded, it will write stats to the log. The
.B showstats
filterset will render the statistics into the framebuffer
each frame.
.TP
.B checks
Does some expensive checks for things that are illegal in rendering
calls but for which OpenGL only specifies undefined behaviour. These
include
.RE
Sourcing vertex or index data from unreadable client memory.

Sourcing vertex or index data from outside the valid range of a vertex
buffer object.

Calling
.B glVertex
from outside of
.BR glBegin / glEnd .

Setting client state from inside
.BR glBegin / glEnd .

Specifying indices to
.BR glDrawRangeElements (3x)
that are outside the specified range.
.RS
.P
There are several other filter-sets, but they are all used internally
and are automatically loaded when necessary.

.SH CONFIGURATION
You can create filter-set chains in the file
.BR $HOME/.bugle/filters .
It is possible to use
.B bugle
without creating this file, but it will simply pass all calls straight
through to the real OpenGL library. This is not particularly useful
unless you are using
.BR gldb .

The file is text-based. Comments begin with a
.B "#"
and continue to the end of the line. Strings may be quoted with
double-quotes, and backslash acts as an escape character in the usual
way (including escaping of newlines). Other white-space is ignored.

The file contains filter-set options, filter-sets, and chains, each
nested inside the previous one. The syntax is most easily demonstrated
with an example:

.nf
    chain trace
    {
        filterset log
        {
            filename "bugle.log"
            flush yes
        }
        filterset showerror
    }
.fi

Note that braces around sets of options are optional, while the braces
around chains are not. Boolean options may be specified as
.BR yes/no ,
as
.BR true/false ,
or as
.BR 1/0 .

.SH ENVIRONMENT
.TP
.B BUGLE_CHAIN
Specifies the filter-set chain to use. If absent, the first chain in
the configuration file is used.
.TP
.B BUGLE_FILTERS
If present, specifies an alternative configuration file to use, instead of
.BR "$HOME/.bugle/filters" .
.TP
.B BUGLE_FILTER_DIR
If present, specifies an alternative directory in which to find
modules. This option is currently used by the test suite, and is not
intended for general use.
.TP
.B LD_PRELOAD
Used to tell the linker to load
.BR bugle .
.SH FILES
.TP
.B "$HOME/.bugle/filters"
Lists the possible filter-set chains. See
.B CONFIGURATION
above for a description of the format.
.SH BUGS
OpenGL color-index mode is not well supported.

Multi-threaded applications that call the GL from more than one thread
will break in various ways. The debugger filter-set is particularly
fragile.

Display lists may cause things to go wrong, depending on how they are
created and what calls go into them.
.SH AUTHOR
.B gldb
and the
.B bugle
library are written and maintained by Bruce Merry
<bmerry@users.sourceforge.net>.

.SH "SEE ALSO"
.BR gldb (1),
.BR ppm (5)
