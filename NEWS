0.0.20060306
------------
This is a minor update that fixes some build problems on Debian
testing. Users who successfully built and installed 0.0.20060224 do not
need to upgrade.

0.0.20060224
------------
This release adds code to intercept keypresses from the application.
Screenshots are now taken by keypress rather than on every frame, and
it is possible to manually start and stop filter-sets such as video
recording (particularly useful if the framebuffer is resized before
starting, as a resize normally terminates encoding) and wireframe. See
the manual page for details.

gl2ps, a library to create Postscript and similar files from the
feedback buffer, has been incorporated, allowing one to create vector
graphic screenshots. This is handled by the 'eps' filterset, although it
actually supports PS, PDF and even SVG). Of course, this has the usual
limitations of the feedback buffer (no per-pixel effects), so don't
expect to capture Doom 3, but it works beautifully for glxgears.

There are also some bugfixes, and in particular GTK+ 2.8 and pre-release
versions of ffmpeg should now be better supported.

WARNING: the options to the screenshot filter-set have changed, and the
epswire filter-set has been replaced by the eps filter-set. You will
need to update your ~/.bugle/filters file. Refer to the example in
doc/examples/filters for a sample. I've removed the option to set a
start frame for video capture (since you can now press a key to start).
If you need the old behaviour let me know and I can restore it.

0.0.20060101
------------
This release greatly improves the texture viewer in gldb-gui, as well as
fixing a number of bugs. It also fixes a dubious shortcut (read: bug)
that caused all kinds of havoc with ATI drivers. If previous releases
have caused weird problems when using an ATI card (whether with gldb,
gldb-gui or a filter), give this release a try.

I have had intermittent problems with gldb-gui crashing due to "an X
Window System error". If you can reproduce this, let me know so that I
can try to fix it.

0.0.20051112
------------
There is now a graphical debugger, gldb-gui. The GUI is still in very
early development, and anything complicated will break it (in
particular, 1D, 3D and cube-map textures are not supported in the
texture viewer).

There is also support for several new extensions in gldb's state viewer,
including GL_ARB_vertex_program, GL_ARB_fragment_program,
GL_ARB_texture_rectangle, GL_EXT_texture_filter_anisotropic, and
GL_EXT_framebuffer_object.

0.0.20050221
------------
This version is a major update. The code generator, state manager and
object tracker have all been rewritten and work a lot better, and
substantial changes have been made to the call dispatcher to reduce
overhead. Almost all of OpenGL 2.0 is now supported. It should also be
slightly more portable, due to the use of ltdl to load modules.

As a result, there are probably lots of new bugs. Please send them to
me at bmerry@users.sourceforge.net.

This version also adds the 'checks' filter-set. See the man page for
details.

0.0.20041123
------------
The major news is the news stats and showstats filter-sets, which can
display frame rate, triangle count and fragment count - as an overlay
on the rendered frame! There has also been some work to reduce overhead,
so that the fps counter will be reasonably accurate.

0.0.20041108
------------
Some bugfixes and minor improvements, including a filter-set to tell
you what extensions are being used. See the ChangeLog.

0.0.20041025
------------
Minor update, the most important fix being that extension functions
will now be properly intercepted. If the previous version worked for
you, and you are not using extensions, then you shouldn't need to
update.

0.0.20041011
------------
This is a fairly major update to the internals, although not much of it
is visible to the user. The biggest changes are the ability to pass
options to the program that gldb will run, and a 'screenshot' command
within gldb to take screenshots on request.

WARNING: see the README for upgrade instructions. Simply installing
over an older version will break things. You will also need to add the
'trace' filter-set to your existing configuration files if you want the
tracing functionality originally provided by the 'log' filter-set.

0.0.20040903
------------
This release adds a few minor improvements to the video capture facility.
See the ChangeLog.

0.0.20040719
------------
The big changes are improvements to the debugging facility, gldb. Pressing
Ctrl-C will now stop the program (ala gdb), and it is possible to query
OpenGL state. Refer to the gldb(1) manual page for details.

This release also offers much better thread safety, and it should now
be mostly possible to use bugle even with programs that render
simultaneously from multiple threads. However, the debugger will not
work on a multi-threaded program, and there are still a few known race
conditions.

Finally, there is also a preliminary video capture mode. It is still
somewhat slow and experimental.

0.0.20040614
------------
This release adds the gldb debugging tool. This replaces the rather
primitive debugging mode of earlier releases, where you specified
breakpoints in the config file. See the man page for instructions on
using gldb.

You will probably need to modify your configuration file, to take
account of the following changes (or you can just copy the one in
doc/examples/filters.
- The invoke filter-set is automatically loaded. You may still specify
  it, but omitting it makes no difference.
- The debugger filter-set should no longer be specified. It is
  automatically loaded by the debugger, and attempting to use it
  without the debugger will lead to errors.
- The "error" filter-set has been renamed to "showerror".
  An "error" filter-set still exists, but only detects errors for the
  benefit of other filter-sets. For example, the "log" filter-set will
  log errors if the "error" filter-set is used.

0.0.20040609
------------
Minor bugfixes only.

0.0.20040606
------------
This is the first public release of BuGLe. Please read the README file
first, as the software it still pretty rough.
